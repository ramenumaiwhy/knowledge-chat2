# Prometheus Configuration for n8n Monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'n8n-production'
    environment: 'production'

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # - alertmanager:9093

# Rule files
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # n8n main instance metrics
  - job_name: 'n8n-main'
    static_configs:
      - targets: ['n8n-main:5678']
        labels:
          service: 'n8n'
          component: 'main'
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # n8n worker metrics
  - job_name: 'n8n-workers'
    static_configs:
      - targets: ['n8n-worker:5678']
        labels:
          service: 'n8n'
          component: 'worker'
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Traffic splitter metrics
  - job_name: 'traffic-splitter'
    static_configs:
      - targets: ['traffic-splitter:3002']
        labels:
          service: 'traffic-splitter'
    metrics_path: '/metrics'
    scrape_interval: 10s

  # PostgreSQL exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'postgres'
          database: 'n8n'

  # Redis exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'redis'
          role: 'queue'

  # Node exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'system'

  # Nginx exporter
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
        labels:
          service: 'nginx'
          role: 'reverse-proxy'

  # Webhook server (if running)
  - job_name: 'webhook-server'
    static_configs:
      - targets: ['webhook-server:3000']
        labels:
          service: 'webhook-server'
    metrics_path: '/metrics'
    scrape_interval: 30s

# Remote write configuration (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     basic_auth:
#       username: 'username'
#       password: 'password'

# Storage configuration
storage:
  tsdb:
    retention:
      time: 30d
      size: 10GB